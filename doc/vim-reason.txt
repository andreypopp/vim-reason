 vim:tw=78:sw=4:noet:ts=8:ft=help:norl:

*reason.txt*  Lean and mean status/tabline that's light as air
*reason* *vim-reason*

	   _                                                    ~
    __   _(_)_ __ ___        _ __ ___  __ _ ___  ___  _ __      ~
    \ \ / / | '_ ` _ \ _____| '__/ _ \/ _` / __|/ _ \| '_ \     ~
     \ V /| | | | | | |_____| | |  __/ (_| \__ \ (_) | | | |    ~
      \_/ |_|_| |_| |_|     |_|  \___|\__,_|___/\___/|_| |_|    ~

==============================================================================
CONTENTS                                                      *reason* *ft-reason*

   01. Intro ................................................ |reason-intro|
   02. Configuration ...............................  |reason-configuration|
   05. Commands .......................................... |reason-commands|
   06. License ............................................ |reason-license|


==============================================================================
INTRODUCTION                                                      *reason-intro*

Plugin for developing Reason proejcts with Reason syntax and Merlin.

You must have Merlin installed either as a global program, or as a
`devDependency` of an [`esy`](https://github.com/esy/esy) project.

Recommended Config:


    " Airline
    let g:vimreason_project_airline=1
    let g:vimreason_syntastic_airline=1
    let g:vimreason_clean_project_airline=1
    let g:airline#extensions#whitespace#enabled = 0
    let g:airline_powerline_fonts = 1
    let g:airline_skip_empty_sections = 1

==============================================================================
CONFIGURATION                                             *reason-configuration*

The following values may be set in your vim configuration. The values shown
here are their defaults.

* Customize arguments passed to `refmt` when running `:ReasonPrettyPrint`

  let g:vimreason_extra_args_expr_reason=''

* Customize `refmt` location when running `:ReasonPrettyPrint`
  Defaults to `"refmt"`

  let g:vimreason_reason='/My/Path/to/refmt'

* Whether or not to show esy project status in vim-airline.

  let g:vimreason_project_airline=1

  NOTE: This overrides airline's built in syntastic integration with something
  much more streamlined.
  Recommended with the following airline config in your vimrc.

* Whether or not to clean up the airline line numbers and file info sections.
  This has nothing to do with reason/esy but it offers a nicer and cleaner
  statusline that shows line/characters in a more readable manner, and avoids
  creating "jumpy" status lines when your cursor moves. Pairs well with
  g:vimreason_project_airline=1 (only activated when
  g:vimreason_project_airline=1).

  let g:vimreason_clean_project_airline=1


* Whether or not to override the airline warning/error sections with
  a custom error/warning display.

  let g:vimreason_syntastic_airline=1


* Symbols to use in airline when `vimreason_syntastic_airline` is set to `1`.
  `vim-reason` respects `VimBox` settings for GUI elements, but you can define
  these even without using `VimBox`.

  let g:vimBoxLinterErrorSymbol="⮿"
  let g:vimBoxLinterWarningSymbol="⮿"
  let g:vimBoxLinterOkSymbol="☻"


* Location of ocamlmerlin binary. You can force this to a custom location for
  testing. Make sure it is set before plugins load. In general, you never set
  this because we find the optimal location based on the first file you edit.

  let g:vimreason_ocamlmerlin_path=''

==============================================================================
COMMANDS                                                       *reason-commands*

:ReasonPrettyPrint                                           *:ReasonPrettyPrint*
  Pretty print the Reason code.

:EsyFetchProjectInfo                                       *:EsyFetchProjectInfo*
  Queries the project for the current buffer.
  Returns an empty [] if the current file/buffer has no associated esy
  project.

:EsyReset                                                             *:EsyReset*
  Resets the esy project cache in Vim.

:EsyExec                                                               *:EsyExec*
  Allows executing script commands in the context of an esy project if your
  current buffer exists in a built esy project. It will fall back to global
  environment if you are not in a built esy project, or if you are in a buffer
  with no name/location.


==============================================================================
LICENSE                                                     *vim-reason-license*

MIT License.  Copyright © 2013-2017 Bailey Ling, Christian Brabandt

 vim:tw=78:ts=8:ft=help:norl:
